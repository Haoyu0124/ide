/*
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.sodalite.dsl.aADM.AADM_Model
import org.sodalite.dsl.aADM.ENodeTemplates
import org.sodalite.dsl.services.AADMGrammarAccess
import org.sodalite.dsl.aADM.ENodeTemplate

import static org.sodalite.dsl.aADM.AADMPackage.Literals.*
import org.sodalite.dsl.aADM.ENodeTemplateBody
import org.sodalite.dsl.aADM.EPropertyAssigments
import org.sodalite.dsl.aADM.EPropertyAssignment

class AADMFormatter extends RMFormatter {
	
	@Inject extension AADMGrammarAccess

	def dispatch void format(AADM_Model aADM_Model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		aADM_Model.prepend[setNewLines(0, 0, 0); noSpace]
		aADM_Model.regionFor.keyword("node_templates:").append[newLine]
		aADM_Model.inputs.format
		aADM_Model.nodeTemplates.format
	}

	def dispatch void format(ENodeTemplates eNodeTemplates, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc.
		for (eNodeTemplate : eNodeTemplates.nodeTemplates) {
			eNodeTemplate.format
		}
	}
	
	// TODO: implement for ENodeTemplate, ENodeTemplateBody, ERequirementAssignments, ECapabilityAssignments, ECapabilityAssignment, EAttributeAssigments, EAttributeAssignment, EPropertyAssigments, EPropertyAssignment
	def dispatch void format(ENodeTemplate eNodeTemplate, extension IFormattableDocument document){
		eNodeTemplate.surround[indent]
		eNodeTemplate.regionFor.feature(ENODE_TEMPLATE__NAME).append[noSpace]
		eNodeTemplate.regionFor.keyword(":").append[newLine]
		eNodeTemplate.node.surround[indent].format
	}
	
	def dispatch void format(ENodeTemplateBody eNodeTemplateBody, extension IFormattableDocument document){		
		eNodeTemplateBody.regionFor.keyword("type:").append[oneSpace]
		eNodeTemplateBody.regionFor.feature(ENODE_TEMPLATE_BODY__TYPE).append[newLine]
		
		eNodeTemplateBody.regionFor.keyword("description:").append[oneSpace]
		eNodeTemplateBody.regionFor.feature(ENODE_TEMPLATE_BODY__DESCRIPTION).append[newLine]
		
		eNodeTemplateBody.regionFor.keyword("optimization:").append[oneSpace]
		eNodeTemplateBody.regionFor.feature(ENODE_TEMPLATE_BODY__OPTIMIZATION).append[newLine]
		
		eNodeTemplateBody.regionFor.keyword("properties:").append[newLine]
		eNodeTemplateBody.properties.surround[indent].format
	}
	
	def dispatch void format(EPropertyAssigments ePropertyAssigments, extension IFormattableDocument document){
		for (property : ePropertyAssigments.properties) {
			property.format.append[newLine]
		}
	}
	
	def dispatch void format(EPropertyAssignment ePropertyAssigment, extension IFormattableDocument document){
		ePropertyAssigment.regionFor.feature(EPROPERTY_ASSIGNMENT__NAME).append[noSpace]
		ePropertyAssigment.regionFor.keyword(":").append[oneSpace]
		ePropertyAssigment.value.format.append[newLine]
	}
}
