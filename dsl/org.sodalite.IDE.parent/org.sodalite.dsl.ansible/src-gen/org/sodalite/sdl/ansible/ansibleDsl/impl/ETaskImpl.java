/**
 * generated by Xtext 2.23.0
 */
package org.sodalite.sdl.ansible.ansibleDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage;
import org.sodalite.sdl.ansible.ansibleDsl.EBase;
import org.sodalite.sdl.ansible.ansibleDsl.EBaseAttributes;
import org.sodalite.sdl.ansible.ansibleDsl.EExecution;
import org.sodalite.sdl.ansible.ansibleDsl.EExecutionAttributes;
import org.sodalite.sdl.ansible.ansibleDsl.ETask;
import org.sodalite.sdl.ansible.ansibleDsl.ETaskHandler;
import org.sodalite.sdl.ansible.ansibleDsl.ETaskHandlerAttributes;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ETask</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ETaskImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ETaskImpl#getBase_attributes <em>Base attributes</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ETaskImpl#getExecution_attributes <em>Execution attributes</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ETaskImpl#getTask_handler_attributes <em>Task handler attributes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ETaskImpl extends EBlockTaskImpl implements ETask
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getBase_attributes() <em>Base attributes</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBase_attributes()
   * @generated
   * @ordered
   */
  protected EBaseAttributes base_attributes;

  /**
   * The cached value of the '{@link #getExecution_attributes() <em>Execution attributes</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExecution_attributes()
   * @generated
   * @ordered
   */
  protected EExecutionAttributes execution_attributes;

  /**
   * The cached value of the '{@link #getTask_handler_attributes() <em>Task handler attributes</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTask_handler_attributes()
   * @generated
   * @ordered
   */
  protected ETaskHandlerAttributes task_handler_attributes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ETaskImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AnsibleDslPackage.Literals.ETASK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ETASK__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EBaseAttributes getBase_attributes()
  {
    return base_attributes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBase_attributes(EBaseAttributes newBase_attributes, NotificationChain msgs)
  {
    EBaseAttributes oldBase_attributes = base_attributes;
    base_attributes = newBase_attributes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ETASK__BASE_ATTRIBUTES, oldBase_attributes, newBase_attributes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBase_attributes(EBaseAttributes newBase_attributes)
  {
    if (newBase_attributes != base_attributes)
    {
      NotificationChain msgs = null;
      if (base_attributes != null)
        msgs = ((InternalEObject)base_attributes).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.ETASK__BASE_ATTRIBUTES, null, msgs);
      if (newBase_attributes != null)
        msgs = ((InternalEObject)newBase_attributes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.ETASK__BASE_ATTRIBUTES, null, msgs);
      msgs = basicSetBase_attributes(newBase_attributes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ETASK__BASE_ATTRIBUTES, newBase_attributes, newBase_attributes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EExecutionAttributes getExecution_attributes()
  {
    return execution_attributes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExecution_attributes(EExecutionAttributes newExecution_attributes, NotificationChain msgs)
  {
    EExecutionAttributes oldExecution_attributes = execution_attributes;
    execution_attributes = newExecution_attributes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES, oldExecution_attributes, newExecution_attributes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExecution_attributes(EExecutionAttributes newExecution_attributes)
  {
    if (newExecution_attributes != execution_attributes)
    {
      NotificationChain msgs = null;
      if (execution_attributes != null)
        msgs = ((InternalEObject)execution_attributes).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES, null, msgs);
      if (newExecution_attributes != null)
        msgs = ((InternalEObject)newExecution_attributes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES, null, msgs);
      msgs = basicSetExecution_attributes(newExecution_attributes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES, newExecution_attributes, newExecution_attributes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ETaskHandlerAttributes getTask_handler_attributes()
  {
    return task_handler_attributes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTask_handler_attributes(ETaskHandlerAttributes newTask_handler_attributes, NotificationChain msgs)
  {
    ETaskHandlerAttributes oldTask_handler_attributes = task_handler_attributes;
    task_handler_attributes = newTask_handler_attributes;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES, oldTask_handler_attributes, newTask_handler_attributes);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTask_handler_attributes(ETaskHandlerAttributes newTask_handler_attributes)
  {
    if (newTask_handler_attributes != task_handler_attributes)
    {
      NotificationChain msgs = null;
      if (task_handler_attributes != null)
        msgs = ((InternalEObject)task_handler_attributes).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES, null, msgs);
      if (newTask_handler_attributes != null)
        msgs = ((InternalEObject)newTask_handler_attributes).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES, null, msgs);
      msgs = basicSetTask_handler_attributes(newTask_handler_attributes, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES, newTask_handler_attributes, newTask_handler_attributes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ETASK__BASE_ATTRIBUTES:
        return basicSetBase_attributes(null, msgs);
      case AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES:
        return basicSetExecution_attributes(null, msgs);
      case AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES:
        return basicSetTask_handler_attributes(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ETASK__NAME:
        return getName();
      case AnsibleDslPackage.ETASK__BASE_ATTRIBUTES:
        return getBase_attributes();
      case AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES:
        return getExecution_attributes();
      case AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES:
        return getTask_handler_attributes();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ETASK__NAME:
        setName((String)newValue);
        return;
      case AnsibleDslPackage.ETASK__BASE_ATTRIBUTES:
        setBase_attributes((EBaseAttributes)newValue);
        return;
      case AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES:
        setExecution_attributes((EExecutionAttributes)newValue);
        return;
      case AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES:
        setTask_handler_attributes((ETaskHandlerAttributes)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ETASK__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AnsibleDslPackage.ETASK__BASE_ATTRIBUTES:
        setBase_attributes((EBaseAttributes)null);
        return;
      case AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES:
        setExecution_attributes((EExecutionAttributes)null);
        return;
      case AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES:
        setTask_handler_attributes((ETaskHandlerAttributes)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ETASK__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AnsibleDslPackage.ETASK__BASE_ATTRIBUTES:
        return base_attributes != null;
      case AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES:
        return execution_attributes != null;
      case AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES:
        return task_handler_attributes != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == EBase.class)
    {
      switch (derivedFeatureID)
      {
        case AnsibleDslPackage.ETASK__NAME: return AnsibleDslPackage.EBASE__NAME;
        case AnsibleDslPackage.ETASK__BASE_ATTRIBUTES: return AnsibleDslPackage.EBASE__BASE_ATTRIBUTES;
        default: return -1;
      }
    }
    if (baseClass == EExecution.class)
    {
      switch (derivedFeatureID)
      {
        case AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES: return AnsibleDslPackage.EEXECUTION__EXECUTION_ATTRIBUTES;
        default: return -1;
      }
    }
    if (baseClass == ETaskHandler.class)
    {
      switch (derivedFeatureID)
      {
        case AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES: return AnsibleDslPackage.ETASK_HANDLER__TASK_HANDLER_ATTRIBUTES;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == EBase.class)
    {
      switch (baseFeatureID)
      {
        case AnsibleDslPackage.EBASE__NAME: return AnsibleDslPackage.ETASK__NAME;
        case AnsibleDslPackage.EBASE__BASE_ATTRIBUTES: return AnsibleDslPackage.ETASK__BASE_ATTRIBUTES;
        default: return -1;
      }
    }
    if (baseClass == EExecution.class)
    {
      switch (baseFeatureID)
      {
        case AnsibleDslPackage.EEXECUTION__EXECUTION_ATTRIBUTES: return AnsibleDslPackage.ETASK__EXECUTION_ATTRIBUTES;
        default: return -1;
      }
    }
    if (baseClass == ETaskHandler.class)
    {
      switch (baseFeatureID)
      {
        case AnsibleDslPackage.ETASK_HANDLER__TASK_HANDLER_ATTRIBUTES: return AnsibleDslPackage.ETASK__TASK_HANDLER_ATTRIBUTES;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ETaskImpl
