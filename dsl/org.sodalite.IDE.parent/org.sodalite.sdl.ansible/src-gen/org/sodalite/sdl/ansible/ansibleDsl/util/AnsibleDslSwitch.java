/**
 * generated by Xtext 2.23.0
 */
package org.sodalite.sdl.ansible.ansibleDsl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.sodalite.sdl.ansible.ansibleDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage
 * @generated
 */
public class AnsibleDslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static AnsibleDslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AnsibleDslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = AnsibleDslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case AnsibleDslPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EPLAYBOOK:
      {
        EPlaybook ePlaybook = (EPlaybook)theEObject;
        T result = caseEPlaybook(ePlaybook);
        if (result == null) result = caseModel(ePlaybook);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EBASE:
      {
        EBase eBase = (EBase)theEObject;
        T result = caseEBase(eBase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EEXECUTION:
      {
        EExecution eExecution = (EExecution)theEObject;
        T result = caseEExecution(eExecution);
        if (result == null) result = caseEBase(eExecution);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EBLOCK_TASK:
      {
        EBlockTask eBlockTask = (EBlockTask)theEObject;
        T result = caseEBlockTask(eBlockTask);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ETASK_HANDLER:
      {
        ETaskHandler eTaskHandler = (ETaskHandler)theEObject;
        T result = caseETaskHandler(eTaskHandler);
        if (result == null) result = caseEExecution(eTaskHandler);
        if (result == null) result = caseEBase(eTaskHandler);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EPLAY:
      {
        EPlay ePlay = (EPlay)theEObject;
        T result = caseEPlay(ePlay);
        if (result == null) result = caseEBase(ePlay);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EBLOCK:
      {
        EBlock eBlock = (EBlock)theEObject;
        T result = caseEBlock(eBlock);
        if (result == null) result = caseEExecution(eBlock);
        if (result == null) result = caseEBlockTask(eBlock);
        if (result == null) result = caseEBase(eBlock);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ETASK:
      {
        ETask eTask = (ETask)theEObject;
        T result = caseETask(eTask);
        if (result == null) result = caseEBlockTask(eTask);
        if (result == null) result = caseETaskHandler(eTask);
        if (result == null) result = caseEExecution(eTask);
        if (result == null) result = caseEBase(eTask);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EHANDLER:
      {
        EHandler eHandler = (EHandler)theEObject;
        T result = caseEHandler(eHandler);
        if (result == null) result = caseETaskHandler(eHandler);
        if (result == null) result = caseEExecution(eHandler);
        if (result == null) result = caseEBase(eHandler);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EEXECUTION_COMMON_KEYWORDS:
      {
        EExecutionCommonKeywords eExecutionCommonKeywords = (EExecutionCommonKeywords)theEObject;
        T result = caseEExecutionCommonKeywords(eExecutionCommonKeywords);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ETASK_HANDLER_COMMON_KEYWORDS:
      {
        ETaskHandlerCommonKeywords eTaskHandlerCommonKeywords = (ETaskHandlerCommonKeywords)theEObject;
        T result = caseETaskHandlerCommonKeywords(eTaskHandlerCommonKeywords);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EMODULE_CALL:
      {
        EModuleCall eModuleCall = (EModuleCall)theEObject;
        T result = caseEModuleCall(eModuleCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EPARAMETER:
      {
        EParameter eParameter = (EParameter)theEObject;
        T result = caseEParameter(eParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ECONDITIONAL_EXPRESSION:
      {
        EConditionalExpression eConditionalExpression = (EConditionalExpression)theEObject;
        T result = caseEConditionalExpression(eConditionalExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ECONDITIONAL_FORMULA:
      {
        EConditionalFormula eConditionalFormula = (EConditionalFormula)theEObject;
        T result = caseEConditionalFormula(eConditionalFormula);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EROLE_CALLS:
      {
        ERoleCalls eRoleCalls = (ERoleCalls)theEObject;
        T result = caseERoleCalls(eRoleCalls);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EROLE:
      {
        ERole eRole = (ERole)theEObject;
        T result = caseERole(eRole);
        if (result == null) result = caseModel(eRole);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EROLE_METADATA:
      {
        ERoleMetadata eRoleMetadata = (ERoleMetadata)theEObject;
        T result = caseERoleMetadata(eRoleMetadata);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EROLE_METADATA_GALAXY:
      {
        ERoleMetadataGalaxy eRoleMetadataGalaxy = (ERoleMetadataGalaxy)theEObject;
        T result = caseERoleMetadataGalaxy(eRoleMetadataGalaxy);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ELOOP:
      {
        ELoop eLoop = (ELoop)theEObject;
        T result = caseELoop(eLoop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ELOOP_OVER_LIST:
      {
        ELoopOverList eLoopOverList = (ELoopOverList)theEObject;
        T result = caseELoopOverList(eLoopOverList);
        if (result == null) result = caseELoop(eLoopOverList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ELOOP_LIST:
      {
        ELoopList eLoopList = (ELoopList)theEObject;
        T result = caseELoopList(eLoopList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ELOOP_CONTROL:
      {
        ELoopControl eLoopControl = (ELoopControl)theEObject;
        T result = caseELoopControl(eLoopControl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EUNTIL:
      {
        EUntil eUntil = (EUntil)theEObject;
        T result = caseEUntil(eUntil);
        if (result == null) result = caseELoop(eUntil);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EPRIVILAGE_ESCALATION:
      {
        EPrivilageEscalation ePrivilageEscalation = (EPrivilageEscalation)theEObject;
        T result = caseEPrivilageEscalation(ePrivilageEscalation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EVALIDATION_MODE:
      {
        EValidationMode eValidationMode = (EValidationMode)theEObject;
        T result = caseEValidationMode(eValidationMode);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ECONNECTION:
      {
        EConnection eConnection = (EConnection)theEObject;
        T result = caseEConnection(eConnection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EEXE_SETTINGS:
      {
        EExeSettings eExeSettings = (EExeSettings)theEObject;
        T result = caseEExeSettings(eExeSettings);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EPLAY_EXE_SETTINGS:
      {
        EPlayExeSettings ePlayExeSettings = (EPlayExeSettings)theEObject;
        T result = caseEPlayExeSettings(ePlayExeSettings);
        if (result == null) result = caseEExeSettings(ePlayExeSettings);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EEXECUTION_EXE_SETTINGS:
      {
        EExecutionExeSettings eExecutionExeSettings = (EExecutionExeSettings)theEObject;
        T result = caseEExecutionExeSettings(eExecutionExeSettings);
        if (result == null) result = caseEExeSettings(eExecutionExeSettings);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EERROR_HANDLING:
      {
        EErrorHandling eErrorHandling = (EErrorHandling)theEObject;
        T result = caseEErrorHandling(eErrorHandling);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EBLOCK_ERROR_HANDLING:
      {
        EBlockErrorHandling eBlockErrorHandling = (EBlockErrorHandling)theEObject;
        T result = caseEBlockErrorHandling(eBlockErrorHandling);
        if (result == null) result = caseEErrorHandling(eBlockErrorHandling);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EPLAY_ERROR_HANDLING:
      {
        EPlayErrorHandling ePlayErrorHandling = (EPlayErrorHandling)theEObject;
        T result = caseEPlayErrorHandling(ePlayErrorHandling);
        if (result == null) result = caseEErrorHandling(ePlayErrorHandling);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ETASK_HANDLER_ERROR_HANDLING:
      {
        ETaskHandlerErrorHandling eTaskHandlerErrorHandling = (ETaskHandlerErrorHandling)theEObject;
        T result = caseETaskHandlerErrorHandling(eTaskHandlerErrorHandling);
        if (result == null) result = caseEErrorHandling(eTaskHandlerErrorHandling);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EBASE_COMMON_KEYWORDS:
      {
        EBaseCommonKeywords eBaseCommonKeywords = (EBaseCommonKeywords)theEObject;
        T result = caseEBaseCommonKeywords(eBaseCommonKeywords);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EFACTS_SETTINGS:
      {
        EFactsSettings eFactsSettings = (EFactsSettings)theEObject;
        T result = caseEFactsSettings(eFactsSettings);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EDELEGATION:
      {
        EDelegation eDelegation = (EDelegation)theEObject;
        T result = caseEDelegation(eDelegation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EASYNCHRONOUS_SETTINGS:
      {
        EAsynchronousSettings eAsynchronousSettings = (EAsynchronousSettings)theEObject;
        T result = caseEAsynchronousSettings(eAsynchronousSettings);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ENOTIFIABLE:
      {
        ENotifiable eNotifiable = (ENotifiable)theEObject;
        T result = caseENotifiable(eNotifiable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ENOTIFIED_HANDLER:
      {
        ENotifiedHandler eNotifiedHandler = (ENotifiedHandler)theEObject;
        T result = caseENotifiedHandler(eNotifiedHandler);
        if (result == null) result = caseENotifiable(eNotifiedHandler);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ENOTIFIED_TOPIC:
      {
        ENotifiedTopic eNotifiedTopic = (ENotifiedTopic)theEObject;
        T result = caseENotifiedTopic(eNotifiedTopic);
        if (result == null) result = caseENotifiable(eNotifiedTopic);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EVALUE_PASSED:
      {
        EValuePassed eValuePassed = (EValuePassed)theEObject;
        T result = caseEValuePassed(eValuePassed);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EVALUE:
      {
        EValue eValue = (EValue)theEObject;
        T result = caseEValue(eValue);
        if (result == null) result = caseEValuePassed(eValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EFILTERED_VARIABLE:
      {
        EFilteredVariable eFilteredVariable = (EFilteredVariable)theEObject;
        T result = caseEFilteredVariable(eFilteredVariable);
        if (result == null) result = caseELoopList(eFilteredVariable);
        if (result == null) result = caseEFilteredVariableOrString(eFilteredVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EFILTERED_VARIABLE_OR_STRING:
      {
        EFilteredVariableOrString eFilteredVariableOrString = (EFilteredVariableOrString)theEObject;
        T result = caseEFilteredVariableOrString(eFilteredVariableOrString);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EFILTERED_VARIABLES_AND_STRING:
      {
        EFilteredVariablesAndString eFilteredVariablesAndString = (EFilteredVariablesAndString)theEObject;
        T result = caseEFilteredVariablesAndString(eFilteredVariablesAndString);
        if (result == null) result = caseEValue(eFilteredVariablesAndString);
        if (result == null) result = caseEValuePassed(eFilteredVariablesAndString);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EDICTIONARY_PAIR_REFERENCE:
      {
        EDictionaryPairReference eDictionaryPairReference = (EDictionaryPairReference)theEObject;
        T result = caseEDictionaryPairReference(eDictionaryPairReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EDECLARED_VARIABLE:
      {
        EDeclaredVariable eDeclaredVariable = (EDeclaredVariable)theEObject;
        T result = caseEDeclaredVariable(eDeclaredVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EVARIABLE_DECLARATION:
      {
        EVariableDeclaration eVariableDeclaration = (EVariableDeclaration)theEObject;
        T result = caseEVariableDeclaration(eVariableDeclaration);
        if (result == null) result = caseEDeclaredVariable(eVariableDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EREGISTER_VARIABLE:
      {
        ERegisterVariable eRegisterVariable = (ERegisterVariable)theEObject;
        T result = caseERegisterVariable(eRegisterVariable);
        if (result == null) result = caseEDeclaredVariable(eRegisterVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EFACT_GATHERED:
      {
        EFactGathered eFactGathered = (EFactGathered)theEObject;
        T result = caseEFactGathered(eFactGathered);
        if (result == null) result = caseELoopList(eFactGathered);
        if (result == null) result = caseEValuePassed(eFactGathered);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EDICTIONARY:
      {
        EDictionary eDictionary = (EDictionary)theEObject;
        T result = caseEDictionary(eDictionary);
        if (result == null) result = caseEValue(eDictionary);
        if (result == null) result = caseEValuePassed(eDictionary);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.EDICTIONARY_PAIR:
      {
        EDictionaryPair eDictionaryPair = (EDictionaryPair)theEObject;
        T result = caseEDictionaryPair(eDictionaryPair);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case AnsibleDslPackage.ELIST:
      {
        EList eList = (EList)theEObject;
        T result = caseEList(eList);
        if (result == null) result = caseELoopList(eList);
        if (result == null) result = caseEValue(eList);
        if (result == null) result = caseEValuePassed(eList);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPlaybook</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPlaybook</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPlaybook(EPlaybook object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EBase</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EBase</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEBase(EBase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EExecution</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EExecution</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEExecution(EExecution object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EBlock Task</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EBlock Task</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEBlockTask(EBlockTask object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETask Handler</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETask Handler</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETaskHandler(ETaskHandler object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPlay</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPlay</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPlay(EPlay object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EBlock</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EBlock</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEBlock(EBlock object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETask</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETask</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETask(ETask object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EHandler</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EHandler</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEHandler(EHandler object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EExecution Common Keywords</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EExecution Common Keywords</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEExecutionCommonKeywords(EExecutionCommonKeywords object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETask Handler Common Keywords</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETask Handler Common Keywords</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETaskHandlerCommonKeywords(ETaskHandlerCommonKeywords object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EModule Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EModule Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEModuleCall(EModuleCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EParameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EParameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEParameter(EParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EConditional Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EConditional Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEConditionalExpression(EConditionalExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EConditional Formula</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EConditional Formula</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEConditionalFormula(EConditionalFormula object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ERole Calls</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ERole Calls</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseERoleCalls(ERoleCalls object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ERole</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ERole</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseERole(ERole object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ERole Metadata</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ERole Metadata</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseERoleMetadata(ERoleMetadata object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ERole Metadata Galaxy</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ERole Metadata Galaxy</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseERoleMetadataGalaxy(ERoleMetadataGalaxy object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ELoop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ELoop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseELoop(ELoop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ELoop Over List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ELoop Over List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseELoopOverList(ELoopOverList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ELoop List</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ELoop List</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseELoopList(ELoopList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ELoop Control</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ELoop Control</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseELoopControl(ELoopControl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EUntil</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EUntil</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEUntil(EUntil object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPrivilage Escalation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPrivilage Escalation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPrivilageEscalation(EPrivilageEscalation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EValidation Mode</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EValidation Mode</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEValidationMode(EValidationMode object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EConnection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EConnection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEConnection(EConnection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EExe Settings</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EExe Settings</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEExeSettings(EExeSettings object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPlay Exe Settings</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPlay Exe Settings</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPlayExeSettings(EPlayExeSettings object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EExecution Exe Settings</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EExecution Exe Settings</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEExecutionExeSettings(EExecutionExeSettings object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EError Handling</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EError Handling</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEErrorHandling(EErrorHandling object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EBlock Error Handling</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EBlock Error Handling</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEBlockErrorHandling(EBlockErrorHandling object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EPlay Error Handling</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EPlay Error Handling</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEPlayErrorHandling(EPlayErrorHandling object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ETask Handler Error Handling</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ETask Handler Error Handling</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseETaskHandlerErrorHandling(ETaskHandlerErrorHandling object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EBase Common Keywords</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EBase Common Keywords</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEBaseCommonKeywords(EBaseCommonKeywords object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFacts Settings</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFacts Settings</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFactsSettings(EFactsSettings object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EDelegation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EDelegation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDelegation(EDelegation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EAsynchronous Settings</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EAsynchronous Settings</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEAsynchronousSettings(EAsynchronousSettings object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ENotifiable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ENotifiable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseENotifiable(ENotifiable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ENotified Handler</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ENotified Handler</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseENotifiedHandler(ENotifiedHandler object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ENotified Topic</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ENotified Topic</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseENotifiedTopic(ENotifiedTopic object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EValue Passed</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EValue Passed</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEValuePassed(EValuePassed object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EValue</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EValue</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEValue(EValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFiltered Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFiltered Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFilteredVariable(EFilteredVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFiltered Variable Or String</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFiltered Variable Or String</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFilteredVariableOrString(EFilteredVariableOrString object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFiltered Variables And String</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFiltered Variables And String</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFilteredVariablesAndString(EFilteredVariablesAndString object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EDictionary Pair Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EDictionary Pair Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDictionaryPairReference(EDictionaryPairReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EDeclared Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EDeclared Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDeclaredVariable(EDeclaredVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EVariable Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EVariable Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEVariableDeclaration(EVariableDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>ERegister Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>ERegister Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseERegisterVariable(ERegisterVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EFact Gathered</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EFact Gathered</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEFactGathered(EFactGathered object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EDictionary</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EDictionary</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDictionary(EDictionary object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EDictionary Pair</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EDictionary Pair</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEDictionaryPair(EDictionaryPair object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EList</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EList</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEList(EList object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //AnsibleDslSwitch
