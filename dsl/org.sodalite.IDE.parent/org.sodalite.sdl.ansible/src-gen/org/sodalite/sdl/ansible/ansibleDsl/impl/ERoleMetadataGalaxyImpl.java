/**
 * generated by Xtext 2.23.0
 */
package org.sodalite.sdl.ansible.ansibleDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage;
import org.sodalite.sdl.ansible.ansibleDsl.EList;
import org.sodalite.sdl.ansible.ansibleDsl.ERoleMetadataGalaxy;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ERole Metadata Galaxy</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getAuthor <em>Author</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getCompany <em>Company</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getIssue_tracker_url <em>Issue tracker url</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getLicense <em>License</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getMin_ansible_version <em>Min ansible version</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getMin_ansible_container_version <em>Min ansible container version</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getGithhub_branch <em>Githhub branch</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getPlatforms <em>Platforms</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getCloud_platforms <em>Cloud platforms</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.ERoleMetadataGalaxyImpl#getGalaxy_tags <em>Galaxy tags</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ERoleMetadataGalaxyImpl extends MinimalEObjectImpl.Container implements ERoleMetadataGalaxy
{
  /**
   * The default value of the '{@link #getAuthor() <em>Author</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthor()
   * @generated
   * @ordered
   */
  protected static final String AUTHOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAuthor() <em>Author</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthor()
   * @generated
   * @ordered
   */
  protected String author = AUTHOR_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The default value of the '{@link #getCompany() <em>Company</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompany()
   * @generated
   * @ordered
   */
  protected static final String COMPANY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCompany() <em>Company</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompany()
   * @generated
   * @ordered
   */
  protected String company = COMPANY_EDEFAULT;

  /**
   * The default value of the '{@link #getIssue_tracker_url() <em>Issue tracker url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIssue_tracker_url()
   * @generated
   * @ordered
   */
  protected static final String ISSUE_TRACKER_URL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIssue_tracker_url() <em>Issue tracker url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIssue_tracker_url()
   * @generated
   * @ordered
   */
  protected String issue_tracker_url = ISSUE_TRACKER_URL_EDEFAULT;

  /**
   * The default value of the '{@link #getLicense() <em>License</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLicense()
   * @generated
   * @ordered
   */
  protected static final String LICENSE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLicense() <em>License</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLicense()
   * @generated
   * @ordered
   */
  protected String license = LICENSE_EDEFAULT;

  /**
   * The default value of the '{@link #getMin_ansible_version() <em>Min ansible version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMin_ansible_version()
   * @generated
   * @ordered
   */
  protected static final String MIN_ANSIBLE_VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMin_ansible_version() <em>Min ansible version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMin_ansible_version()
   * @generated
   * @ordered
   */
  protected String min_ansible_version = MIN_ANSIBLE_VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getMin_ansible_container_version() <em>Min ansible container version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMin_ansible_container_version()
   * @generated
   * @ordered
   */
  protected static final String MIN_ANSIBLE_CONTAINER_VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMin_ansible_container_version() <em>Min ansible container version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMin_ansible_container_version()
   * @generated
   * @ordered
   */
  protected String min_ansible_container_version = MIN_ANSIBLE_CONTAINER_VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getGithhub_branch() <em>Githhub branch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGithhub_branch()
   * @generated
   * @ordered
   */
  protected static final String GITHHUB_BRANCH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGithhub_branch() <em>Githhub branch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGithhub_branch()
   * @generated
   * @ordered
   */
  protected String githhub_branch = GITHHUB_BRANCH_EDEFAULT;

  /**
   * The cached value of the '{@link #getPlatforms() <em>Platforms</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlatforms()
   * @generated
   * @ordered
   */
  protected EList platforms;

  /**
   * The cached value of the '{@link #getCloud_platforms() <em>Cloud platforms</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCloud_platforms()
   * @generated
   * @ordered
   */
  protected EList cloud_platforms;

  /**
   * The cached value of the '{@link #getGalaxy_tags() <em>Galaxy tags</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGalaxy_tags()
   * @generated
   * @ordered
   */
  protected EList galaxy_tags;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ERoleMetadataGalaxyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AnsibleDslPackage.Literals.EROLE_METADATA_GALAXY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAuthor()
  {
    return author;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAuthor(String newAuthor)
  {
    String oldAuthor = author;
    author = newAuthor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__AUTHOR, oldAuthor, author));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCompany()
  {
    return company;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCompany(String newCompany)
  {
    String oldCompany = company;
    company = newCompany;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__COMPANY, oldCompany, company));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIssue_tracker_url()
  {
    return issue_tracker_url;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIssue_tracker_url(String newIssue_tracker_url)
  {
    String oldIssue_tracker_url = issue_tracker_url;
    issue_tracker_url = newIssue_tracker_url;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__ISSUE_TRACKER_URL, oldIssue_tracker_url, issue_tracker_url));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLicense()
  {
    return license;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLicense(String newLicense)
  {
    String oldLicense = license;
    license = newLicense;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__LICENSE, oldLicense, license));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMin_ansible_version()
  {
    return min_ansible_version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMin_ansible_version(String newMin_ansible_version)
  {
    String oldMin_ansible_version = min_ansible_version;
    min_ansible_version = newMin_ansible_version;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__MIN_ANSIBLE_VERSION, oldMin_ansible_version, min_ansible_version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMin_ansible_container_version()
  {
    return min_ansible_container_version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMin_ansible_container_version(String newMin_ansible_container_version)
  {
    String oldMin_ansible_container_version = min_ansible_container_version;
    min_ansible_container_version = newMin_ansible_container_version;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__MIN_ANSIBLE_CONTAINER_VERSION, oldMin_ansible_container_version, min_ansible_container_version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGithhub_branch()
  {
    return githhub_branch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGithhub_branch(String newGithhub_branch)
  {
    String oldGithhub_branch = githhub_branch;
    githhub_branch = newGithhub_branch;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__GITHHUB_BRANCH, oldGithhub_branch, githhub_branch));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList getPlatforms()
  {
    return platforms;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPlatforms(EList newPlatforms, NotificationChain msgs)
  {
    EList oldPlatforms = platforms;
    platforms = newPlatforms;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__PLATFORMS, oldPlatforms, newPlatforms);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPlatforms(EList newPlatforms)
  {
    if (newPlatforms != platforms)
    {
      NotificationChain msgs = null;
      if (platforms != null)
        msgs = ((InternalEObject)platforms).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.EROLE_METADATA_GALAXY__PLATFORMS, null, msgs);
      if (newPlatforms != null)
        msgs = ((InternalEObject)newPlatforms).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.EROLE_METADATA_GALAXY__PLATFORMS, null, msgs);
      msgs = basicSetPlatforms(newPlatforms, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__PLATFORMS, newPlatforms, newPlatforms));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList getCloud_platforms()
  {
    return cloud_platforms;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCloud_platforms(EList newCloud_platforms, NotificationChain msgs)
  {
    EList oldCloud_platforms = cloud_platforms;
    cloud_platforms = newCloud_platforms;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__CLOUD_PLATFORMS, oldCloud_platforms, newCloud_platforms);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCloud_platforms(EList newCloud_platforms)
  {
    if (newCloud_platforms != cloud_platforms)
    {
      NotificationChain msgs = null;
      if (cloud_platforms != null)
        msgs = ((InternalEObject)cloud_platforms).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.EROLE_METADATA_GALAXY__CLOUD_PLATFORMS, null, msgs);
      if (newCloud_platforms != null)
        msgs = ((InternalEObject)newCloud_platforms).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.EROLE_METADATA_GALAXY__CLOUD_PLATFORMS, null, msgs);
      msgs = basicSetCloud_platforms(newCloud_platforms, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__CLOUD_PLATFORMS, newCloud_platforms, newCloud_platforms));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList getGalaxy_tags()
  {
    return galaxy_tags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGalaxy_tags(EList newGalaxy_tags, NotificationChain msgs)
  {
    EList oldGalaxy_tags = galaxy_tags;
    galaxy_tags = newGalaxy_tags;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__GALAXY_TAGS, oldGalaxy_tags, newGalaxy_tags);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGalaxy_tags(EList newGalaxy_tags)
  {
    if (newGalaxy_tags != galaxy_tags)
    {
      NotificationChain msgs = null;
      if (galaxy_tags != null)
        msgs = ((InternalEObject)galaxy_tags).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.EROLE_METADATA_GALAXY__GALAXY_TAGS, null, msgs);
      if (newGalaxy_tags != null)
        msgs = ((InternalEObject)newGalaxy_tags).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AnsibleDslPackage.EROLE_METADATA_GALAXY__GALAXY_TAGS, null, msgs);
      msgs = basicSetGalaxy_tags(newGalaxy_tags, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EROLE_METADATA_GALAXY__GALAXY_TAGS, newGalaxy_tags, newGalaxy_tags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__PLATFORMS:
        return basicSetPlatforms(null, msgs);
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__CLOUD_PLATFORMS:
        return basicSetCloud_platforms(null, msgs);
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__GALAXY_TAGS:
        return basicSetGalaxy_tags(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__AUTHOR:
        return getAuthor();
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__DESCRIPTION:
        return getDescription();
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__COMPANY:
        return getCompany();
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__ISSUE_TRACKER_URL:
        return getIssue_tracker_url();
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__LICENSE:
        return getLicense();
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__MIN_ANSIBLE_VERSION:
        return getMin_ansible_version();
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__MIN_ANSIBLE_CONTAINER_VERSION:
        return getMin_ansible_container_version();
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__GITHHUB_BRANCH:
        return getGithhub_branch();
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__PLATFORMS:
        return getPlatforms();
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__CLOUD_PLATFORMS:
        return getCloud_platforms();
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__GALAXY_TAGS:
        return getGalaxy_tags();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__AUTHOR:
        setAuthor((String)newValue);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__COMPANY:
        setCompany((String)newValue);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__ISSUE_TRACKER_URL:
        setIssue_tracker_url((String)newValue);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__LICENSE:
        setLicense((String)newValue);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__MIN_ANSIBLE_VERSION:
        setMin_ansible_version((String)newValue);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__MIN_ANSIBLE_CONTAINER_VERSION:
        setMin_ansible_container_version((String)newValue);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__GITHHUB_BRANCH:
        setGithhub_branch((String)newValue);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__PLATFORMS:
        setPlatforms((EList)newValue);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__CLOUD_PLATFORMS:
        setCloud_platforms((EList)newValue);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__GALAXY_TAGS:
        setGalaxy_tags((EList)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__AUTHOR:
        setAuthor(AUTHOR_EDEFAULT);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__COMPANY:
        setCompany(COMPANY_EDEFAULT);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__ISSUE_TRACKER_URL:
        setIssue_tracker_url(ISSUE_TRACKER_URL_EDEFAULT);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__LICENSE:
        setLicense(LICENSE_EDEFAULT);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__MIN_ANSIBLE_VERSION:
        setMin_ansible_version(MIN_ANSIBLE_VERSION_EDEFAULT);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__MIN_ANSIBLE_CONTAINER_VERSION:
        setMin_ansible_container_version(MIN_ANSIBLE_CONTAINER_VERSION_EDEFAULT);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__GITHHUB_BRANCH:
        setGithhub_branch(GITHHUB_BRANCH_EDEFAULT);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__PLATFORMS:
        setPlatforms((EList)null);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__CLOUD_PLATFORMS:
        setCloud_platforms((EList)null);
        return;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__GALAXY_TAGS:
        setGalaxy_tags((EList)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__AUTHOR:
        return AUTHOR_EDEFAULT == null ? author != null : !AUTHOR_EDEFAULT.equals(author);
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__COMPANY:
        return COMPANY_EDEFAULT == null ? company != null : !COMPANY_EDEFAULT.equals(company);
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__ISSUE_TRACKER_URL:
        return ISSUE_TRACKER_URL_EDEFAULT == null ? issue_tracker_url != null : !ISSUE_TRACKER_URL_EDEFAULT.equals(issue_tracker_url);
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__LICENSE:
        return LICENSE_EDEFAULT == null ? license != null : !LICENSE_EDEFAULT.equals(license);
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__MIN_ANSIBLE_VERSION:
        return MIN_ANSIBLE_VERSION_EDEFAULT == null ? min_ansible_version != null : !MIN_ANSIBLE_VERSION_EDEFAULT.equals(min_ansible_version);
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__MIN_ANSIBLE_CONTAINER_VERSION:
        return MIN_ANSIBLE_CONTAINER_VERSION_EDEFAULT == null ? min_ansible_container_version != null : !MIN_ANSIBLE_CONTAINER_VERSION_EDEFAULT.equals(min_ansible_container_version);
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__GITHHUB_BRANCH:
        return GITHHUB_BRANCH_EDEFAULT == null ? githhub_branch != null : !GITHHUB_BRANCH_EDEFAULT.equals(githhub_branch);
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__PLATFORMS:
        return platforms != null;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__CLOUD_PLATFORMS:
        return cloud_platforms != null;
      case AnsibleDslPackage.EROLE_METADATA_GALAXY__GALAXY_TAGS:
        return galaxy_tags != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (author: ");
    result.append(author);
    result.append(", description: ");
    result.append(description);
    result.append(", company: ");
    result.append(company);
    result.append(", issue_tracker_url: ");
    result.append(issue_tracker_url);
    result.append(", license: ");
    result.append(license);
    result.append(", min_ansible_version: ");
    result.append(min_ansible_version);
    result.append(", min_ansible_container_version: ");
    result.append(min_ansible_container_version);
    result.append(", githhub_branch: ");
    result.append(githhub_branch);
    result.append(')');
    return result.toString();
  }

} //ERoleMetadataGalaxyImpl
