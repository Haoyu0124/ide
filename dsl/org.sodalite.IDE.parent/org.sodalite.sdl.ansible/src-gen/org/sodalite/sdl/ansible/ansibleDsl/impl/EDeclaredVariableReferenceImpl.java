/**
 * generated by Xtext 2.23.0
 */
package org.sodalite.sdl.ansible.ansibleDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage;
import org.sodalite.sdl.ansible.ansibleDsl.EDeclaredVariable;
import org.sodalite.sdl.ansible.ansibleDsl.EDeclaredVariableReference;
import org.sodalite.sdl.ansible.ansibleDsl.EDictionaryPairReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>EDeclared Variable Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EDeclaredVariableReferenceImpl#getVariable_reference <em>Variable reference</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EDeclaredVariableReferenceImpl#getIndex <em>Index</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EDeclaredVariableReferenceImpl#getTail <em>Tail</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EDeclaredVariableReferenceImpl extends EValuePassedToJinjaExpressionImpl implements EDeclaredVariableReference
{
  /**
   * The cached value of the '{@link #getVariable_reference() <em>Variable reference</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable_reference()
   * @generated
   * @ordered
   */
  protected EDeclaredVariable variable_reference;

  /**
   * The default value of the '{@link #getIndex() <em>Index</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndex()
   * @generated
   * @ordered
   */
  protected static final String INDEX_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIndex() <em>Index</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndex()
   * @generated
   * @ordered
   */
  protected String index = INDEX_EDEFAULT;

  /**
   * The cached value of the '{@link #getTail() <em>Tail</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTail()
   * @generated
   * @ordered
   */
  protected EList<EDictionaryPairReference> tail;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EDeclaredVariableReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AnsibleDslPackage.Literals.EDECLARED_VARIABLE_REFERENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EDeclaredVariable getVariable_reference()
  {
    if (variable_reference != null && variable_reference.eIsProxy())
    {
      InternalEObject oldVariable_reference = (InternalEObject)variable_reference;
      variable_reference = (EDeclaredVariable)eResolveProxy(oldVariable_reference);
      if (variable_reference != oldVariable_reference)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__VARIABLE_REFERENCE, oldVariable_reference, variable_reference));
      }
    }
    return variable_reference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EDeclaredVariable basicGetVariable_reference()
  {
    return variable_reference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariable_reference(EDeclaredVariable newVariable_reference)
  {
    EDeclaredVariable oldVariable_reference = variable_reference;
    variable_reference = newVariable_reference;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__VARIABLE_REFERENCE, oldVariable_reference, variable_reference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIndex()
  {
    return index;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIndex(String newIndex)
  {
    String oldIndex = index;
    index = newIndex;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__INDEX, oldIndex, index));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EDictionaryPairReference> getTail()
  {
    if (tail == null)
    {
      tail = new EObjectContainmentEList<EDictionaryPairReference>(EDictionaryPairReference.class, this, AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__TAIL);
    }
    return tail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__TAIL:
        return ((InternalEList<?>)getTail()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__VARIABLE_REFERENCE:
        if (resolve) return getVariable_reference();
        return basicGetVariable_reference();
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__INDEX:
        return getIndex();
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__TAIL:
        return getTail();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__VARIABLE_REFERENCE:
        setVariable_reference((EDeclaredVariable)newValue);
        return;
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__INDEX:
        setIndex((String)newValue);
        return;
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__TAIL:
        getTail().clear();
        getTail().addAll((Collection<? extends EDictionaryPairReference>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__VARIABLE_REFERENCE:
        setVariable_reference((EDeclaredVariable)null);
        return;
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__INDEX:
        setIndex(INDEX_EDEFAULT);
        return;
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__TAIL:
        getTail().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__VARIABLE_REFERENCE:
        return variable_reference != null;
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__INDEX:
        return INDEX_EDEFAULT == null ? index != null : !INDEX_EDEFAULT.equals(index);
      case AnsibleDslPackage.EDECLARED_VARIABLE_REFERENCE__TAIL:
        return tail != null && !tail.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (index: ");
    result.append(index);
    result.append(')');
    return result.toString();
  }

} //EDeclaredVariableReferenceImpl
