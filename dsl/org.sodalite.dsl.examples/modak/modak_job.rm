capability_types:
	sodalite.capabilities.modak.ModakEndpoint:
    	derived_from: tosca.capabilities.Root
    
	sodalite.capabilities.modak.Target:
    	derived_from: tosca.capabilities.Root
node_types:
	sodalite.nodes.modak:
    	derived_from: tosca.nodes.Root
    	properties:
      		endpoint:
        		type: string
    	capabilities:
      		modak_endpoint:
        		type: sodalite.capabilities.modak.ModakEndpoint
        		valid_source_types: [ sodalite.nodes.modak.job ]

	sodalite.nodes.modak.target:
    	derived_from: tosca.nodes.Root
    	properties:
      		name:
        		type: string
      		queue_type:
        		type: string
    	capabilities:
      		target:
        		type: sodalite.capabilities.modak.Target
        		valid_source_types: [ sodalite.nodes.modak.job ]


	// here we can have the playbook that directly interfaces MODAK (src/docker)
	// and then proceed with the normal job workflow from HPC examples
	sodalite.nodes.modak.job:
		derived_from: tosca.nodes.Root
		properties:
			job_script:
				type: string
			job_options:
				type: map
				entry_schema: sodalite.datatypes.modak.job_options
			application:
				type: map
				entry_schema: sodalite.datatypes.modak.application
			target:
				type: map
				entry_schema: sodalite.datatypes.modak.target
			optimisation:
				type: map
				entry_schema: sodalite.datatypes.modak.optimisation
		attributes:
			artifact_url:
				type: string
		requirements:
			modak_endpoint:
				node: sodalite.nodes.modak
				capability: sodalite.capabilities.modak.ModakEndpoint
				relationship: tosca.relationships.DependsOn
				occurrences: [ "1", "1" ]
			target:
				node: sodalite.nodes.modak.target
				capability: sodalite.capabilities.modak.Target
				relationship: tosca.relationships.DependsOn
				occurrences: [ "1", "1" ]
		interfaces:
			Standard:
				type: tosca.interfaces.node.lifecycle.Standard
				operations:
					create:
						inputs:
							//job script location
							job_script: 
								default: get_property: 
									entity: SELF
									property: sodalite.nodes.modak.job.job_script
							//modak_endpoint properties
							modak_endpoint: 
								default: get_property: 
									entity: SELF
									property: sodalite.nodes.modak.endpoint
									req_cap: sodalite.nodes.modak.job.modak_endpoint
							//job_options properties
							job_options: 
								default: get_property: 
									entity: SELF
									property: sodalite.nodes.modak.job.job_options
							//application properties
							application: 
								default: get_property: 
									entity: SELF
									property: sodalite.nodes.modak.job.application
							//target properties
							target: 
								default: get_property: 
									entity: SELF
									property: sodalite.nodes.modak.job.target
							//optimisation properties
							optimisation: 
								default: get_property: 
									entity: SELF
									property: sodalite.nodes.modak.job.optimisation
						implementation: 
							primary: "/home/yosu/Projects/Sodalite/Git/iac-management/hpc/modak/library/modak/job/playbooks/create-modak-job.yml"	