/**
 * generated by Xtext 2.23.0
 */
package org.sodalite.sdl.ansible.ansibleDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage;
import org.sodalite.sdl.ansible.ansibleDsl.EConnection;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>EConnection</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EConnectionImpl#getConnection <em>Connection</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EConnectionImpl#getPort <em>Port</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EConnectionImpl#getRemote_user <em>Remote user</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EConnectionImpl extends MinimalEObjectImpl.Container implements EConnection
{
  /**
   * The default value of the '{@link #getConnection() <em>Connection</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnection()
   * @generated
   * @ordered
   */
  protected static final String CONNECTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getConnection() <em>Connection</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnection()
   * @generated
   * @ordered
   */
  protected String connection = CONNECTION_EDEFAULT;

  /**
   * The default value of the '{@link #getPort() <em>Port</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPort()
   * @generated
   * @ordered
   */
  protected static final int PORT_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPort() <em>Port</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPort()
   * @generated
   * @ordered
   */
  protected int port = PORT_EDEFAULT;

  /**
   * The default value of the '{@link #getRemote_user() <em>Remote user</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRemote_user()
   * @generated
   * @ordered
   */
  protected static final String REMOTE_USER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRemote_user() <em>Remote user</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRemote_user()
   * @generated
   * @ordered
   */
  protected String remote_user = REMOTE_USER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EConnectionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AnsibleDslPackage.Literals.ECONNECTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getConnection()
  {
    return connection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConnection(String newConnection)
  {
    String oldConnection = connection;
    connection = newConnection;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ECONNECTION__CONNECTION, oldConnection, connection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getPort()
  {
    return port;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPort(int newPort)
  {
    int oldPort = port;
    port = newPort;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ECONNECTION__PORT, oldPort, port));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRemote_user()
  {
    return remote_user;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRemote_user(String newRemote_user)
  {
    String oldRemote_user = remote_user;
    remote_user = newRemote_user;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.ECONNECTION__REMOTE_USER, oldRemote_user, remote_user));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ECONNECTION__CONNECTION:
        return getConnection();
      case AnsibleDslPackage.ECONNECTION__PORT:
        return getPort();
      case AnsibleDslPackage.ECONNECTION__REMOTE_USER:
        return getRemote_user();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ECONNECTION__CONNECTION:
        setConnection((String)newValue);
        return;
      case AnsibleDslPackage.ECONNECTION__PORT:
        setPort((Integer)newValue);
        return;
      case AnsibleDslPackage.ECONNECTION__REMOTE_USER:
        setRemote_user((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ECONNECTION__CONNECTION:
        setConnection(CONNECTION_EDEFAULT);
        return;
      case AnsibleDslPackage.ECONNECTION__PORT:
        setPort(PORT_EDEFAULT);
        return;
      case AnsibleDslPackage.ECONNECTION__REMOTE_USER:
        setRemote_user(REMOTE_USER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.ECONNECTION__CONNECTION:
        return CONNECTION_EDEFAULT == null ? connection != null : !CONNECTION_EDEFAULT.equals(connection);
      case AnsibleDslPackage.ECONNECTION__PORT:
        return port != PORT_EDEFAULT;
      case AnsibleDslPackage.ECONNECTION__REMOTE_USER:
        return REMOTE_USER_EDEFAULT == null ? remote_user != null : !REMOTE_USER_EDEFAULT.equals(remote_user);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (connection: ");
    result.append(connection);
    result.append(", port: ");
    result.append(port);
    result.append(", remote_user: ");
    result.append(remote_user);
    result.append(')');
    return result.toString();
  }

} //EConnectionImpl
