/**
 * generated by Xtext 2.23.0
 */
package org.sodalite.sdl.ansible.ui.contentassist;

import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.sodalite.sdl.ansible.ansibleDsl.impl.EPlayImpl;
import org.sodalite.sdl.ansible.ansibleDsl.impl.ERegisterVariableImpl;
import org.sodalite.sdl.ansible.ansibleDsl.impl.EVariableDeclarationImpl;
import org.sodalite.sdl.ansible.ui.contentassist.AbstractAnsibleDslProposalProvider;

/**
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#content-assist
 * on how to customize the content assistant.
 */
@SuppressWarnings("all")
public class AnsibleDslProposalProvider extends AbstractAnsibleDslProposalProvider {
  @Override
  public void complete_BOOLEAN(final EObject model, final RuleCall ruleCall, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    acceptor.accept(this.createCompletionProposal("False", context));
    acceptor.accept(this.createCompletionProposal("True", context));
  }
  
  @Override
  public void complete_NULL(final EObject model, final RuleCall ruleCall, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    acceptor.accept(this.createCompletionProposal("Null", context));
  }
  
  @Override
  public void completeEVariableDeclarationVariableReference_Variable_declaration_variable_reference(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    final EPlayImpl rootPlay = EcoreUtil2.<EPlayImpl>getContainerOfType(model, EPlayImpl.class);
    if ((rootPlay != null)) {
      final List<EVariableDeclarationImpl> candidates = EcoreUtil2.<EVariableDeclarationImpl>getAllContentsOfType(rootPlay, EVariableDeclarationImpl.class);
      for (final EVariableDeclarationImpl candidate : candidates) {
        acceptor.accept(this.createCompletionProposal(candidate.getName(), context));
      }
    }
  }
  
  @Override
  public void completeERegisterVariableReference_Register_variable_reference(final EObject model, final Assignment assignment, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    final EPlayImpl rootPlay = EcoreUtil2.<EPlayImpl>getContainerOfType(model, EPlayImpl.class);
    if ((rootPlay != null)) {
      final List<ERegisterVariableImpl> candidates = EcoreUtil2.<ERegisterVariableImpl>getAllContentsOfType(rootPlay, ERegisterVariableImpl.class);
      for (final ERegisterVariableImpl candidate : candidates) {
        acceptor.accept(this.createCompletionProposal(candidate.getName(), context));
      }
    }
  }
}
