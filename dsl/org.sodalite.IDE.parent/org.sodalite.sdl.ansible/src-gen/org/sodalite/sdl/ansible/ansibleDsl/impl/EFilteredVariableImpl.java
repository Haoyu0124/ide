/**
 * generated by Xtext 2.23.0
 */
package org.sodalite.sdl.ansible.ansibleDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage;
import org.sodalite.sdl.ansible.ansibleDsl.EDeclaredVariable;
import org.sodalite.sdl.ansible.ansibleDsl.EDictionaryPairReference;
import org.sodalite.sdl.ansible.ansibleDsl.EFilteredVariable;
import org.sodalite.sdl.ansible.ansibleDsl.EFilteredVariableOrString;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>EFiltered Variable</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EFilteredVariableImpl#getString <em>String</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EFilteredVariableImpl#getVariable <em>Variable</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EFilteredVariableImpl#getIndex <em>Index</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EFilteredVariableImpl#getTail <em>Tail</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.impl.EFilteredVariableImpl#getFilter_commands <em>Filter commands</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EFilteredVariableImpl extends ELoopListImpl implements EFilteredVariable
{
  /**
   * The default value of the '{@link #getString() <em>String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected static final String STRING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getString() <em>String</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected String string = STRING_EDEFAULT;

  /**
   * The cached value of the '{@link #getVariable() <em>Variable</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected EDeclaredVariable variable;

  /**
   * The default value of the '{@link #getIndex() <em>Index</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndex()
   * @generated
   * @ordered
   */
  protected static final int INDEX_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getIndex() <em>Index</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndex()
   * @generated
   * @ordered
   */
  protected int index = INDEX_EDEFAULT;

  /**
   * The cached value of the '{@link #getTail() <em>Tail</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTail()
   * @generated
   * @ordered
   */
  protected EList<EDictionaryPairReference> tail;

  /**
   * The cached value of the '{@link #getFilter_commands() <em>Filter commands</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilter_commands()
   * @generated
   * @ordered
   */
  protected EList<String> filter_commands;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EFilteredVariableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AnsibleDslPackage.Literals.EFILTERED_VARIABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getString()
  {
    return string;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setString(String newString)
  {
    String oldString = string;
    string = newString;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EFILTERED_VARIABLE__STRING, oldString, string));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EDeclaredVariable getVariable()
  {
    if (variable != null && variable.eIsProxy())
    {
      InternalEObject oldVariable = (InternalEObject)variable;
      variable = (EDeclaredVariable)eResolveProxy(oldVariable);
      if (variable != oldVariable)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AnsibleDslPackage.EFILTERED_VARIABLE__VARIABLE, oldVariable, variable));
      }
    }
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EDeclaredVariable basicGetVariable()
  {
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariable(EDeclaredVariable newVariable)
  {
    EDeclaredVariable oldVariable = variable;
    variable = newVariable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EFILTERED_VARIABLE__VARIABLE, oldVariable, variable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getIndex()
  {
    return index;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIndex(int newIndex)
  {
    int oldIndex = index;
    index = newIndex;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AnsibleDslPackage.EFILTERED_VARIABLE__INDEX, oldIndex, index));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EDictionaryPairReference> getTail()
  {
    if (tail == null)
    {
      tail = new EObjectContainmentEList<EDictionaryPairReference>(EDictionaryPairReference.class, this, AnsibleDslPackage.EFILTERED_VARIABLE__TAIL);
    }
    return tail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getFilter_commands()
  {
    if (filter_commands == null)
    {
      filter_commands = new EDataTypeEList<String>(String.class, this, AnsibleDslPackage.EFILTERED_VARIABLE__FILTER_COMMANDS);
    }
    return filter_commands;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EFILTERED_VARIABLE__TAIL:
        return ((InternalEList<?>)getTail()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EFILTERED_VARIABLE__STRING:
        return getString();
      case AnsibleDslPackage.EFILTERED_VARIABLE__VARIABLE:
        if (resolve) return getVariable();
        return basicGetVariable();
      case AnsibleDslPackage.EFILTERED_VARIABLE__INDEX:
        return getIndex();
      case AnsibleDslPackage.EFILTERED_VARIABLE__TAIL:
        return getTail();
      case AnsibleDslPackage.EFILTERED_VARIABLE__FILTER_COMMANDS:
        return getFilter_commands();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EFILTERED_VARIABLE__STRING:
        setString((String)newValue);
        return;
      case AnsibleDslPackage.EFILTERED_VARIABLE__VARIABLE:
        setVariable((EDeclaredVariable)newValue);
        return;
      case AnsibleDslPackage.EFILTERED_VARIABLE__INDEX:
        setIndex((Integer)newValue);
        return;
      case AnsibleDslPackage.EFILTERED_VARIABLE__TAIL:
        getTail().clear();
        getTail().addAll((Collection<? extends EDictionaryPairReference>)newValue);
        return;
      case AnsibleDslPackage.EFILTERED_VARIABLE__FILTER_COMMANDS:
        getFilter_commands().clear();
        getFilter_commands().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EFILTERED_VARIABLE__STRING:
        setString(STRING_EDEFAULT);
        return;
      case AnsibleDslPackage.EFILTERED_VARIABLE__VARIABLE:
        setVariable((EDeclaredVariable)null);
        return;
      case AnsibleDslPackage.EFILTERED_VARIABLE__INDEX:
        setIndex(INDEX_EDEFAULT);
        return;
      case AnsibleDslPackage.EFILTERED_VARIABLE__TAIL:
        getTail().clear();
        return;
      case AnsibleDslPackage.EFILTERED_VARIABLE__FILTER_COMMANDS:
        getFilter_commands().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AnsibleDslPackage.EFILTERED_VARIABLE__STRING:
        return STRING_EDEFAULT == null ? string != null : !STRING_EDEFAULT.equals(string);
      case AnsibleDslPackage.EFILTERED_VARIABLE__VARIABLE:
        return variable != null;
      case AnsibleDslPackage.EFILTERED_VARIABLE__INDEX:
        return index != INDEX_EDEFAULT;
      case AnsibleDslPackage.EFILTERED_VARIABLE__TAIL:
        return tail != null && !tail.isEmpty();
      case AnsibleDslPackage.EFILTERED_VARIABLE__FILTER_COMMANDS:
        return filter_commands != null && !filter_commands.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == EFilteredVariableOrString.class)
    {
      switch (derivedFeatureID)
      {
        case AnsibleDslPackage.EFILTERED_VARIABLE__STRING: return AnsibleDslPackage.EFILTERED_VARIABLE_OR_STRING__STRING;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == EFilteredVariableOrString.class)
    {
      switch (baseFeatureID)
      {
        case AnsibleDslPackage.EFILTERED_VARIABLE_OR_STRING__STRING: return AnsibleDslPackage.EFILTERED_VARIABLE__STRING;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (string: ");
    result.append(string);
    result.append(", index: ");
    result.append(index);
    result.append(", filter_commands: ");
    result.append(filter_commands);
    result.append(')');
    return result.toString();
  }

} //EFilteredVariableImpl
