/**
 * generated by Xtext 2.23.0
 */
package org.sodalite.sdl.ansible.ansibleDsl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>EConditional Formula</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.EConditionalFormula#getLeft_expression <em>Left expression</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.EConditionalFormula#getAnd_or <em>And or</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.EConditionalFormula#getRight_expression <em>Right expression</em>}</li>
 *   <li>{@link org.sodalite.sdl.ansible.ansibleDsl.EConditionalFormula#getNegated_expression <em>Negated expression</em>}</li>
 * </ul>
 *
 * @see org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage#getEConditionalFormula()
 * @model
 * @generated
 */
public interface EConditionalFormula extends EObject
{
  /**
   * Returns the value of the '<em><b>Left expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Left expression</em>' containment reference.
   * @see #setLeft_expression(EConditionalExpression)
   * @see org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage#getEConditionalFormula_Left_expression()
   * @model containment="true"
   * @generated
   */
  EConditionalExpression getLeft_expression();

  /**
   * Sets the value of the '{@link org.sodalite.sdl.ansible.ansibleDsl.EConditionalFormula#getLeft_expression <em>Left expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Left expression</em>' containment reference.
   * @see #getLeft_expression()
   * @generated
   */
  void setLeft_expression(EConditionalExpression value);

  /**
   * Returns the value of the '<em><b>And or</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>And or</em>' attribute.
   * @see #setAnd_or(String)
   * @see org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage#getEConditionalFormula_And_or()
   * @model
   * @generated
   */
  String getAnd_or();

  /**
   * Sets the value of the '{@link org.sodalite.sdl.ansible.ansibleDsl.EConditionalFormula#getAnd_or <em>And or</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>And or</em>' attribute.
   * @see #getAnd_or()
   * @generated
   */
  void setAnd_or(String value);

  /**
   * Returns the value of the '<em><b>Right expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Right expression</em>' containment reference.
   * @see #setRight_expression(EConditionalExpression)
   * @see org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage#getEConditionalFormula_Right_expression()
   * @model containment="true"
   * @generated
   */
  EConditionalExpression getRight_expression();

  /**
   * Sets the value of the '{@link org.sodalite.sdl.ansible.ansibleDsl.EConditionalFormula#getRight_expression <em>Right expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Right expression</em>' containment reference.
   * @see #getRight_expression()
   * @generated
   */
  void setRight_expression(EConditionalExpression value);

  /**
   * Returns the value of the '<em><b>Negated expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Negated expression</em>' containment reference.
   * @see #setNegated_expression(EConditionalExpression)
   * @see org.sodalite.sdl.ansible.ansibleDsl.AnsibleDslPackage#getEConditionalFormula_Negated_expression()
   * @model containment="true"
   * @generated
   */
  EConditionalExpression getNegated_expression();

  /**
   * Sets the value of the '{@link org.sodalite.sdl.ansible.ansibleDsl.EConditionalFormula#getNegated_expression <em>Negated expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Negated expression</em>' containment reference.
   * @see #getNegated_expression()
   * @generated
   */
  void setNegated_expression(EConditionalExpression value);

} // EConditionalFormula
