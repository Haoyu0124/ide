/**
 * generated by Xtext 2.19.0
 */
package org.sodalite.dsl.optimization.optimization.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.sodalite.dsl.optimization.optimization.EConstraint;
import org.sodalite.dsl.optimization.optimization.EOptBuild;
import org.sodalite.dsl.optimization.optimization.OptimizationPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>EOpt Build</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sodalite.dsl.optimization.optimization.impl.EOptBuildImpl#getCpu_type <em>Cpu type</em>}</li>
 *   <li>{@link org.sodalite.dsl.optimization.optimization.impl.EOptBuildImpl#getAcc_type <em>Acc type</em>}</li>
 *   <li>{@link org.sodalite.dsl.optimization.optimization.impl.EOptBuildImpl#getConstraint <em>Constraint</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EOptBuildImpl extends MinimalEObjectImpl.Container implements EOptBuild
{
  /**
   * The default value of the '{@link #getCpu_type() <em>Cpu type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCpu_type()
   * @generated
   * @ordered
   */
  protected static final String CPU_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCpu_type() <em>Cpu type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCpu_type()
   * @generated
   * @ordered
   */
  protected String cpu_type = CPU_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getAcc_type() <em>Acc type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAcc_type()
   * @generated
   * @ordered
   */
  protected static final String ACC_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAcc_type() <em>Acc type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAcc_type()
   * @generated
   * @ordered
   */
  protected String acc_type = ACC_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getConstraint() <em>Constraint</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstraint()
   * @generated
   * @ordered
   */
  protected EConstraint constraint;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EOptBuildImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OptimizationPackage.Literals.EOPT_BUILD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCpu_type()
  {
    return cpu_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCpu_type(String newCpu_type)
  {
    String oldCpu_type = cpu_type;
    cpu_type = newCpu_type;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptimizationPackage.EOPT_BUILD__CPU_TYPE, oldCpu_type, cpu_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAcc_type()
  {
    return acc_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAcc_type(String newAcc_type)
  {
    String oldAcc_type = acc_type;
    acc_type = newAcc_type;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptimizationPackage.EOPT_BUILD__ACC_TYPE, oldAcc_type, acc_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EConstraint getConstraint()
  {
    return constraint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstraint(EConstraint newConstraint, NotificationChain msgs)
  {
    EConstraint oldConstraint = constraint;
    constraint = newConstraint;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OptimizationPackage.EOPT_BUILD__CONSTRAINT, oldConstraint, newConstraint);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConstraint(EConstraint newConstraint)
  {
    if (newConstraint != constraint)
    {
      NotificationChain msgs = null;
      if (constraint != null)
        msgs = ((InternalEObject)constraint).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OptimizationPackage.EOPT_BUILD__CONSTRAINT, null, msgs);
      if (newConstraint != null)
        msgs = ((InternalEObject)newConstraint).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OptimizationPackage.EOPT_BUILD__CONSTRAINT, null, msgs);
      msgs = basicSetConstraint(newConstraint, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OptimizationPackage.EOPT_BUILD__CONSTRAINT, newConstraint, newConstraint));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OptimizationPackage.EOPT_BUILD__CONSTRAINT:
        return basicSetConstraint(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OptimizationPackage.EOPT_BUILD__CPU_TYPE:
        return getCpu_type();
      case OptimizationPackage.EOPT_BUILD__ACC_TYPE:
        return getAcc_type();
      case OptimizationPackage.EOPT_BUILD__CONSTRAINT:
        return getConstraint();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OptimizationPackage.EOPT_BUILD__CPU_TYPE:
        setCpu_type((String)newValue);
        return;
      case OptimizationPackage.EOPT_BUILD__ACC_TYPE:
        setAcc_type((String)newValue);
        return;
      case OptimizationPackage.EOPT_BUILD__CONSTRAINT:
        setConstraint((EConstraint)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OptimizationPackage.EOPT_BUILD__CPU_TYPE:
        setCpu_type(CPU_TYPE_EDEFAULT);
        return;
      case OptimizationPackage.EOPT_BUILD__ACC_TYPE:
        setAcc_type(ACC_TYPE_EDEFAULT);
        return;
      case OptimizationPackage.EOPT_BUILD__CONSTRAINT:
        setConstraint((EConstraint)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OptimizationPackage.EOPT_BUILD__CPU_TYPE:
        return CPU_TYPE_EDEFAULT == null ? cpu_type != null : !CPU_TYPE_EDEFAULT.equals(cpu_type);
      case OptimizationPackage.EOPT_BUILD__ACC_TYPE:
        return ACC_TYPE_EDEFAULT == null ? acc_type != null : !ACC_TYPE_EDEFAULT.equals(acc_type);
      case OptimizationPackage.EOPT_BUILD__CONSTRAINT:
        return constraint != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (cpu_type: ");
    result.append(cpu_type);
    result.append(", acc_type: ");
    result.append(acc_type);
    result.append(')');
    return result.toString();
  }

} //EOptBuildImpl
