module: aws

node_types:

  sodalite.nodes.AWS.VM:  
    derived_from: tosca.nodes.Compute 
    properties:  
      network:  
        description: "AWS subnet ID in which to launch the instance (VPC)" 
        type: string 
      name:  
        description: "Name that should be given to the VM in OpenStack" 
        type: string 
      security_groups:  
        description: "AWS names of the security groups to which the instance should be added."
        type: list 
      flavor:  
        description: "AWS flavor"
        type: string 
      image:  
        description: "AWS image" 
        type: string 
      key_name:  
        description: "AWS SSH key name that should be placed on the VM" 
        type: string 
      username:  
        description: "Username for SSH connection" 
        type: string  
      region:
        description: "The AWS region to use."
        required: false 
        type: string     
      aws_access_key:
        description: "The AWS access key."
        required: false 
        type: string   
      aws_secret_key:
        description: "The AWS secret key."
        required: false 
        type: string   
      userdata:
        description: "Additional userdata applied to configure the VM"
        type: string
        default: ""
        required: false 
      scheduler:
        description: "Scheduler type for batch execution"
        type: string
        default: "batch"
        required: false 
        constraints:
          valid_values: [ "batch" ]           
    attributes:  
      id:  
        description: "AWS id of the VM" 
        type: string 
      ansible_ip:  
        description: "ansible ipv4" 
        type: string 
    requirements:  
      protected_by:  
        relationship: tosca.relationships.DependsOn 
        node: aws/sodalite.nodes.AWS.SecurityRules 
        capability: tosca.capabilities.Node 
    capabilities:  
      feature:  
        type: tosca.capabilities.Node 
    interfaces:  
      Standard:  
        type: tosca.interfaces.node.lifecycle.Standard 
        operations:
          create:  
            inputs:  
              region:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.region
              aws_access_key:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.aws_access_key
              aws_secret_key:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.aws_secret_key
              vm_name:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.name
              flavor:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.flavor  
              image:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.image
              network:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.network
              key_name:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.key_name
              security_groups:  
                type: list
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.security_groups
              userdata:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.userdata
              ansible_user:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.username
            implementation: 
              primary: "/workspace/iac-modules/aws/playbooks/vm_create.yml" 
          delete:  
            inputs:  
              id:  
                type: string
                default: get_attribute:
                  entity: SELF
                  attribute: aws/sodalite.nodes.AWS.VM.id
              aws_access_key:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.aws_access_key
              aws_secret_key:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.aws_secret_key
              vm_name:  
                type: string
                default: get_property:
                  entity: SELF
                  property: aws/sodalite.nodes.AWS.VM.name
            implementation: 
              primary: "/workspace/iac-modules/aws/playbooks/vm_delete.yml" 
