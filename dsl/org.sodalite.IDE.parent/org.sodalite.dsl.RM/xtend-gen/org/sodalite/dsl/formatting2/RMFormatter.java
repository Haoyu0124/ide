/**
 * generated by Xtext 2.22.0
 */
package org.sodalite.dsl.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.sodalite.dsl.rM.EArtifactTypes;
import org.sodalite.dsl.rM.ECapabilityTypes;
import org.sodalite.dsl.rM.EDataType;
import org.sodalite.dsl.rM.EDataTypes;
import org.sodalite.dsl.rM.EInterfaceTypes;
import org.sodalite.dsl.rM.ENodeTypes;
import org.sodalite.dsl.rM.EPolicyTypes;
import org.sodalite.dsl.rM.ERelationshipTypes;
import org.sodalite.dsl.rM.RM_Model;
import org.sodalite.dsl.services.RMGrammarAccess;

@SuppressWarnings("all")
public class RMFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private RMGrammarAccess _rMGrammarAccess;
  
  protected void _format(final RM_Model rM_Model, @Extension final IFormattableDocument document) {
    document.<EDataTypes>format(rM_Model.getDataTypes());
    document.<EArtifactTypes>format(rM_Model.getArtifactTypes());
    document.<ECapabilityTypes>format(rM_Model.getCapabilityTypes());
    document.<EInterfaceTypes>format(rM_Model.getInterfaceTypes());
    document.<ERelationshipTypes>format(rM_Model.getRelationshipTypes());
    document.<ENodeTypes>format(rM_Model.getNodeTypes());
    document.<EPolicyTypes>format(rM_Model.getPolicyTypes());
  }
  
  protected void _format(final EDataTypes eDataTypes, @Extension final IFormattableDocument document) {
    EList<EDataType> _dataTypes = eDataTypes.getDataTypes();
    for (final EDataType eDataType : _dataTypes) {
      document.<EDataType>format(eDataType);
    }
  }
  
  public void format(final Object eDataTypes, final IFormattableDocument document) {
    if (eDataTypes instanceof XtextResource) {
      _format((XtextResource)eDataTypes, document);
      return;
    } else if (eDataTypes instanceof EDataTypes) {
      _format((EDataTypes)eDataTypes, document);
      return;
    } else if (eDataTypes instanceof RM_Model) {
      _format((RM_Model)eDataTypes, document);
      return;
    } else if (eDataTypes instanceof EObject) {
      _format((EObject)eDataTypes, document);
      return;
    } else if (eDataTypes == null) {
      _format((Void)null, document);
      return;
    } else if (eDataTypes != null) {
      _format(eDataTypes, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(eDataTypes, document).toString());
    }
  }
}
